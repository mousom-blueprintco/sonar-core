FROM python:3.11.6-slim-bookworm as base

# Install poetry
RUN pip install pipx
RUN python3 -m pipx ensurepath
RUN pipx install poetry
ENV PATH="/root/.local/bin:$PATH"
ENV PATH=".venv/bin/:$PATH"

# https://python-poetry.org/docs/configuration/#virtualenvsin-project
ENV POETRY_VIRTUALENVS_IN_PROJECT=true

FROM base as dependencies
WORKDIR /home/worker/app
COPY pyproject.toml poetry.lock ./

RUN poetry install --extras "ui rerank-sentence-transformers llms-openai embeddings-openai vector-stores-qdrant" && \
    poetry add gunicorn

FROM base as app

ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH="$PYTHONPATH:/home/worker/app/sonar_labs/"
ENV PORT=8080
EXPOSE 8080

# Prepare a non-root user
ARG UID=100
ARG GID=1000
RUN addgroup --gid ${GID} worker && \
    adduser --system --uid ${UID} --gid ${GID} --home /home/worker worker
WORKDIR /home/worker/app

# Ensure all necessary directories are created and have correct permissions
RUN mkdir -p local_data/sonar_labs && chown -R worker:worker local_data
RUN mkdir -p models && chown -R worker:worker models
RUN mkdir -p tiktoken_cache && chown -R worker:worker tiktoken_cache

COPY --chown=worker:worker --from=dependencies /home/worker/app/.venv/ .venv
COPY --chown=worker:worker sonar_labs/ sonar_labs
COPY --chown=worker:worker fern/ fern
COPY --chown=worker:worker *.yaml ./
COPY --chown=worker:worker scripts/ scripts
COPY --chown=worker:worker Makefile .

USER worker

ENTRYPOINT .venv/bin/gunicorn -b 0.0.0.0:$PORT -w 4 -k uvicorn.workers.UvicornWorker sonar_labs.main:app
